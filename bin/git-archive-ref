#!/usr/bin/env python3

import os
import sys
from subprocess import check_output, check_call

def usage_error():
    print('{0}: usage error'.format(os.path.basename(sys.argv[0])))
    sys.exit(1)

def fatal_error(message):
    print('{0}: error: {1}'.format(os.path.basename(sys.argv[0]), message))
    sys.exit(1)

def main():
    if len(sys.argv) != 1:
        usage_error()

    try:
        cur_symbolic_ref = check_output(['git', 'symbolic-ref', 'HEAD']).decode().rstrip()
    except:
        fatal_error('HEAD is not a symbolic-ref')

    sha = check_output(['git', 'show', '-s', '--format=format:%H', 'HEAD']).decode().rstrip()
    date = check_output(['date', '--utc', '+%F-%H-%M-%S']).decode().rstrip()
    archive_symbolic_ref = os.path.join(cur_symbolic_ref.replace('refs/', 'refs/archive/', 1), date)

    check_call(['git', 'update-ref', archive_symbolic_ref, sha])
    print("{0}\t{1}". format(sha, archive_symbolic_ref))

if __name__ == '__main__':
    main()
