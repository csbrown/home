#!/usr/bin/env python3
#
# Copyright 2014 Chad Versace <chad@kiwitree.net>
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import getopt
import os.path
import sys
import urllib.parse as urlparse
import urllib.request as urlrequest

from sys import exit, stdout, stderr
from textwrap import dedent

def print_usage(file=stdout):
    file.write('usage:\n')
    file.write('    {0} [-h|--help] [-c|--prepend-cwd] [-H|--hostname HOSTNAME] [--] FILEPATH\n'.format(prog_name))

def usage_error(msg):
    stderr.write('usage error: {0}\n'.format(msg))
    stderr.write('\n')
    print_usage(file=stderr)
    exit(1)


def path2url(path, *, hostname=None, prepend_cwd=False):
    if prepend_cwd:
        path = os.path.join(os.getcwd(), path)
    escaped_path = urlrequest.pathname2url(path)
    parsed = urlparse.ParseResult(
        scheme='file', netloc=hostname, path=escaped_path,
        params=None, query=None, fragment=None)
    return urlparse.urlunparse(parsed)

def main(argv):
    global prog_name

    prog_name = os.path.basename(argv.pop(0))
    hostname = None
    prepend_cwd = False

    try:
        optlist, args = getopt.getopt(argv, 'chH:', ['prepend-cwd', 'help', 'hostname='])
    except getopt.GetoptError as err:
        usage_error(err)

    for (opt, value) in optlist:
        if opt in ('-h', '--help'):
            print_usage()
            exit(0)
        elif opt == '-c':
            prepend_cwd = True
        elif opt in ('-H', '--hostname'):
            hostname = value
        else:
            assert(False)

    if len(args) == 0:
        usage_error('no FILEPATH given')

    filepath = args.pop(0)
    if len(args) > 0:
        usage_error('trailing args: ' + ' '.join(map(repr, args)))

    print(path2url(filepath,
                   prepend_cwd=prepend_cwd,
                   hostname=hostname))
    exit(0)

if __name__ == '__main__':
    main(sys.argv)
